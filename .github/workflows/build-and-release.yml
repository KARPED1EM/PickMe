name: Build & Release

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

jobs:
  build-amd:
    name: Build Windows (x86/x64)
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.13 (${{ matrix.arch }})
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: ${{ matrix.arch }}
          cache: 'pip'

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Build (PyInstaller onefile GUI)
        shell: pwsh
        run: |
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          pyinstaller start.pyw --clean --onefile --noconsole `
            --name PickMe `
            --icon "icon.ico" `
            --add-data "app/templates;app/templates" `
            --add-data "app/static;app/static" `
            --add-data "app/data;app/data"

      - name: Upload artifact exe (PickMe-win-py313-${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: PickMe-win-py313-${{ matrix.arch }}
          path: dist/PickMe.exe
          if-no-files-found: error

      - name: Build ithm (x64 only)
        if: matrix.arch == 'x64'
        shell: pwsh
        run: |
          if (Test-Path dist-ithm) { Remove-Item -Recurse -Force dist-ithm }
          if (Test-Path build) { Remove-Item -Recurse -Force build }
          if (Test-Path "app/data.bak") { Remove-Item -Recurse -Force "app/data.bak" }
          Rename-Item "app/data" "app/data.bak"
          Copy-Item -Recurse -Force "data-ithm" "app/data"
          pyinstaller start.pyw --clean --onefile --noconsole `
            --name PickMe `
            --icon "icon.ico" `
            --add-data "app/templates;app/templates" `
            --add-data "app/static;app/static" `
            --add-data "app/data;app/data" `
            --distpath dist-ithm
          Remove-Item -Recurse -Force "app/data"
          Rename-Item "app/data.bak" "app/data"

      - name: Upload artifact exe (PickMe-ithm-win-py313-x64)
        if: matrix.arch == 'x64'
        uses: actions/upload-artifact@v4
        with:
          name: PickMe-ithm-win-py313-x64
          path: dist-ithm/PickMe.exe
          if-no-files-found: error

  build-arm64:
    name: Build Windows (ARM64)
    runs-on: windows-11-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.13 (arm64)
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'arm64'
          cache: 'pip'

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Build (PyInstaller onefile GUI, ARM64)
        shell: pwsh
        run: |
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          pyinstaller start.pyw --clean --onefile --noconsole `
            --name PickMe `
            --icon "icon.ico" `
            --add-data "app/templates;app/templates" `
            --add-data "app/static;app/static" `
            --add-data "app/data;app/data"

      - name: Upload artifact exe (PickMe-win-py313-arm64)
        uses: actions/upload-artifact@v4
        with:
          name: PickMe-win-py313-arm64
          path: dist/PickMe.exe
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: [build-amd, build-arm64]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download release artifacts only
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: PickMe-win-py313-*
          merge-multiple: false

      - name: Zip each exe for release
        run: |
          set -e
          cd artifacts
          find . -type f -name 'PickMe.exe' | while read -r exe; do
            dir="$(basename "$(dirname "$exe")")"
            zipname="../${dir}.zip"
            zip -j "$zipname" "$exe"
          done
          cd ..

      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            PickMe-win-py313-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
